
<program>				::= <functions> 
<functions>				::= <function> <functions> | ""
<function>				::= <identifier> '(' <args> ')' "->" <expression> ';'
<args>					::= <identifier> <args> | ""
<expression>			::= "if" <value-expression> "then" <value-expression> "else" <value-expression> | <value-expression> | <block> | <init-expression>

% New syntax % 
<block>					::= '{' <block-expressions> '}'
<block-expressions>		::= <expression> ';' <block-expressions> | ""
<init-expression>		::= <identifier> ':' <expression>
% New syntax % 

% Labmda syntax %
<lambda>				::= <identifier> "lambda" '(' <args> ')' "->" <block>
<lambda-call>			::= "lambda" <function-call>

<value-expression>		::= <value-expression> <rel-op> <add-term> | <add-term>
<add-term>				::= <add-term> '+' <mult-term> | <add-term> '-' <mult-term> | <mult-term>
<mult-term>				::= <mult-term> '*' <unary-term> |  <mult-term> '/' <unary-term> | <mult-term> '%' <unary-term> | <unary-term>
<unary-term>			::= '+' <unary-term> | '-' <unary-term> | <factor>
<factor>				::= '(' <add-term> ')' | <number> | <identifier> | <function-call>
<function-call>			::= <identifier> '(' <arg-values> ')'
<arg-values>			::= <value-expression> <arg-values> | ""